// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Component renders correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "flex": 1,
      "marginHorizontal": 15,
      "paddingTop": null,
    }
  }
>
  <Text
    style={
      {
        "color": "#034096",
        "fontSize": 20,
        "fontWeight": "bold",
        "marginBottom": 10,
      }
    }
  >
    TODO:
  </Text>
  <RCTScrollView
    contentContainerStyle={
      {
        "flexGrow": 1,
      }
    }
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
  <View
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderRadius": 15,
        "flexDirection": "row",
        "marginVertical": 5,
        "paddingHorizontal": 15,
        "paddingVertical": 10,
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Enter here"
      style={
        {
          "flex": 1,
          "fontWeight": "500",
        }
      }
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#034096",
          "borderRadius": 15,
          "opacity": 1,
          "paddingHorizontal": 30,
          "paddingVertical": 12,
        }
      }
      testID="buttonTestID"
    >
      <Text
        style={
          {
            "color": "#FFFFFF",
            "fontSize": 18,
            "fontWeight": "bold",
          }
        }
      >
        ADD
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;
